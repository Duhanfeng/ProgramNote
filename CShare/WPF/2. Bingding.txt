
1. Binding资源的转换

    前台:
        定义key:
        <UserControl.Resources>
            <ResourceDictionary>
                <local:BoolInvertConverter x:Key="BoolInvertConverter" />
            </ResourceDictionary>
        </UserControl.Resources>

        转换:
        IsEnabled="{Binding XXX, Converter={StaticResource BoolInvertConverter}}"

    后台:

        class BoolInvertConverter : IValueConverter
        {
            public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
            {
                return !(bool)value;
            }

            public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
            {
                throw new NotImplementedException();
            }
        }

2. Binding资源的格式化
    Text="{Binding XXX, StringFormat={}{0:0.###}}"
    <StatusBarItem Content="{Binding ShapeTypeString}" ContentStringFormat="绘图形状: {0}"/>

3. 控件之间的绑定
    有:
        <Canvas x:Name="canvas"/>

    绑定:
        <Image Width="{Binding ElementName=canvas, Path=ActualWidth}" />

4. 转换

    xaml:
    <Window.Resources>
        <ResourceDictionary>
            <local:BoolInvertConverter x:Key="BoolInvertConverter" />
        </ResourceDictionary>
    </Window.Resources>

    如果是控件,则将Window.Resources改成UserControl.Resources

    后台:
    public class BoolInvertConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            return !(bool)value;
        }

        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotImplementedException();
        }
    }
