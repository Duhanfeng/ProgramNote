饿汉模式:

   #region 单例模式

    /// <summary>
    /// 私有实例接口
    /// </summary>
    private static readonly Singleton Instance = new Singleton();

    /// <summary>
    /// 创建私有SceneManager新实例,保证外界无法通过new来创建新实例
    /// </summary>
    private Singleton()
    {

    }

    /// <summary>
    /// 获取实例接口
    /// </summary>
    /// <returns></returns>
    public static Singleton GetInstance()
    {

        return Instance;
    }

    #endregion

饱汉模式:

   #region 单例模式

    public class Singleton
    {
        private static Singleton Instance;
        private static object _lock = new object();

        //创建私有构造函数,保证外接无法通过new来创建新实例
        private Singleton()
        {

        }

        public static Singleton GetInstance()
        {
            if (Instance == null)
            {
                lock (_lock)
                {
                    if (Instance == null)
                    {
                        Instance = new Singleton();
                    }
                }
            }
            return Instance;
        }
    }

    #endregion

